js_import port_module from /etc/nginx/port_map.js;
js_set $backend_ip port_module.ipLookup;

# Define a custom log format
log_format proxy_log '$remote_addr - $host [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent" '
                     'to $backend_ip:80';

# Enable access and error logs
access_log /var/log/nginx/reverse_proxy_access.log proxy_log;
error_log /var/log/nginx/reverse_proxy_error.log info;

server {
    listen 80;
    server_name .opensource.mieweb.com;

    location / {
        if ($backend_ip = "") {
            return 404 "Backend IP not found.";
        }

	proxy_pass http://$backend_ip:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS, uncomment when nginx gets private key, will not work w/o it
#server {
#    listen 443 ssl;
#    server_name .opensource.mieweb.org;  
#    ssl_certificate /etc/nginx/conf.d/opensource-mieweb-org-chain.pem;	
#    ssl_certificate_key /etc/nginx/conf.d/opensource-mieweb-org-key.pem;    
#    location / {
#        if ($backend_ip = "") {
#            return 404 "Backend IP not found.";
#        }       

#        proxy_pass http://$backend_ip:80;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }
#}